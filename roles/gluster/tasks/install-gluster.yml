---
- name: Enable repository - subscription manager
  shell: subscription-manager repos --enable {{ item }}
  with_items: "{{ gluster_repos }}"
  when: repository == "customer_portal" and (new_register.changed or force_repos)
  tags:
    - repos

- name: Enable repository - yum repos
  yum_repository:
    name: "{{ item }}"
    description: "{{ item }}"
    baseurl: "{{ baseurl }}/{{ item }}"
    gpgcheck: no
  with_items: "{{ gluster_repos }}"
  when: repository == "yumrepo"
  tags:
    - repos

## yum packages
- name: install required packages
  yum:
    name: '{{ item }}'
  with_items:
    - redhat-storage-server
  register: package_install
  tags:
    - gluster
    - package_install

- name: Reboot
  shell: sleep 5 && reboot
  async: 30
  poll: 0
  ignore_errors: true
  when: package_update is changed or package_install is changed

- name: Wait for the reboot to complete if there was a change.
  wait_for_connection:
    connect_timeout: 20
    sleep: 5
    delay: 5
    timeout: 300
  when: package_update is changed or package_install is changed

- name: Ensure /root/.ssh directory exists
  file:
    path: /root/.ssh
    state: directory
    owner: root
    group: root
    mode: 0700
  tags: sshkey 

- name: Generate SSH key to upload to servers
  command: ssh-keygen -t rsa -N "" -f ./work-files/{{ reg_user }}-id_rsa creates=./work-files/{{ reg_user }}-id_rsa
  delegate_to: localhost
  run_once: true
  become: false
  register: sshkey

- name: Fetch ssh host keys
  lineinfile:
    path: files/known_hosts
    create: yes
    state: present
    line: "{{ lookup('pipe', 'ssh-keyscan -t ecdsa-sha2-nistp256 '+item) }}"
  with_items:
    - "{{ groups['gluster-primary'] }}"
  delegate_to: localhost
  run_once: true
  tags: hostkeys

- name: Copy known_hosts do gluster nodes
  copy:
    src: known_hosts
    dest: /root/.ssh
    owner: root
    group: root
    mode: 0644
  tags: hostkeys

- name: Fetch ssh host keys - disaster recovery
  lineinfile:
    path: files/known_hosts-backup
    create: yes
    state: present
    line: "{{ lookup('pipe', 'ssh-keyscan -t ecdsa-sha2-nistp256 '+item) }}"
  with_items:
    - "{{ groups['gluster-backup'] }}"
  delegate_to: localhost
  run_once: true
  when: disaster_recovery
  tags: hostkeys

- name: Copy known_hosts do gluster nodes - disaster recovery
  copy:
    src: known_hosts-backup
    dest: /root/.ssh/known_hosts
    owner: root
    group: root
    mode: 0644
  when: disaster_recovery
  tags: hostkeys

- name: Copy ssh private key to first gluster host
  copy:
    src: "./work-files/{{ reg_user }}-id_rsa"
    dest: /root/.ssh/id_rsa
    owner: root
    group: root
    mode: 0600
  run_once: true
  delegate_to: "{{ groups['gluster-primary'][0] }}"
  tags: sshkey

- name: Copy ssh private key to first gluster host - disaster recovery
  copy:
    src: "./work-files/{{ reg_user }}-id_rsa"
    dest: /root/.ssh/id_rsa
    owner: root
    group: root
    mode: 0600
  run_once: true
  delegate_to: "{{ groups['gluster-backup'][0] }}"
  when: disaster_recovery
  tags: sshkey

- name: Add ssh key to authorized keys
  authorized_key:
    user: root
    state: present
    key: "{{ lookup('file', './work-files/'+reg_user+'-id_rsa.pub') }}"
  tags: sshkey 

