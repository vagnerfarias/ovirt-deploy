---
- name: Create VMs
  hosts: ovirt-engine-primary
  gather_facts: false
  remote_user: "{{ reg_user }}"
  vars_files:
    - config-vars.yml

  vars:
    engine_url: https://rhvm.example.com/ovirt-engine/api
    engine_user: admin@internal
    engine_cafile: /etc/pki/ovirt-engine/ca.pem
    engine_password: "{{ ovirt_engine_setup_admin_password }}"

    httpd_vm:
      cluster: production
      domain: example.com
      template: rhel7.6_template
      memory: 2GiB
      cores: 2

    vms:
      - name: apache-vm-1
        tag: httpd_vm
        profile: "{{ httpd_vm }}"
        state: running
        cloud_init_persist: false
        cloud_init: {
              timezone: America/Sao_Paulo,
              user_name: "{{ reg_user }}",
              root_password: 'r3dh4t1!',
              authorized_ssh_keys: "{{ lookup('file', reg_user_sshkey) }}",
              dns_servers: 192.168.8.1,
              nic_boot_protocol: static,
              nic_ip_address: 192.168.8.101,
              nic_netmask: 255.255.255.0,
              nic_gateway: 192.168.8.1,
              nic_name: eth0,
              nic_on_boot: true, 
              custom_script: "runcmd:\n
                               - touch /etc/cloud/cloud-init.disabled\n"
              }
        #- name: apache-vm-2
        #  tag: httpd_vm
        #  profile: "{{ httpd_vm }}"

  roles:
    - oVirt.vm-infra

- name: Inventory update
  hosts: localhost
  connection: local

  tasks:
    - name: Add vm to inventory
      add_host:
        name: 192.168.8.101
        groups: httpd_vm

- name: Configure Web servers
  hosts: httpd_vm
  gather_facts: true
  remote_user: "{{ reg_user }}"
  become: yes
  vars_files:
    - config-vars.yml
    - workload-vars.yml

  tasks:
    - name: Configure repositories
      yum_repository:
        name: rhel-7-server-rpms
        description: rhel-7-server-rpms
        baseurl: "{{ baseurl }}/rhel-7-server-rpms"
        gpgcheck: no

    - name: Update packages
      yum:
        name: '*'
        state: latest

    - name: Install packages
      yum:
        name: "{{ packages }}"
        state: latest
      vars:
        packages:
          - httpd
          - mod_ssl
          - httpd-tools
          - mariadb-server
          - mariadb
          - php-mysql
          - php
          - php-gd
          - MySQL-python

    - name: Start services
      systemd:
        name: "{{ item }}"
        state: started
        enabled: yes
      with_items:
        - httpd
        - mariadb

    - name: Create mysql database
      mysql_db: name={{ wp_mysql_db }} state=present

    - name: Create mysql user
      mysql_user: 
        name: "{{ wp_mysql_user }}"
        password: "{{ wp_mysql_password }}"
        priv: "*.*:ALL"

    - name: Download WordPress
      get_url: 
        url: https://wordpress.org/latest.tar.gz 
        dest: /tmp/wordpress.tar.gz
        validate_certs: no 

    - name: Extract WordPress  
      unarchive: 
        src: /tmp/wordpress.tar.gz 
        dest: /var/www/html 
        copy: no 

    - name: Copy sample config file
      command: mv /var/www/html/wordpress/wp-config-sample.php /var/www/html/wordpress/wp-config.php creates=/var/www/html/wordpress/wp-config.php      

    - name: Update WordPress config file
      lineinfile:
        dest: /var/www/html/wordpress/wp-config.php
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - {'regexp': "define\\('DB_NAME', '(.)+'\\);", 'line': "define('DB_NAME', '{{wp_mysql_db}}');"}        
        - {'regexp': "define\\('DB_USER', '(.)+'\\);", 'line': "define('DB_USER', '{{wp_mysql_user}}');"}        
        - {'regexp': "define\\('DB_PASSWORD', '(.)+'\\);", 'line': "define('DB_PASSWORD', '{{wp_mysql_password}}');"}

